# Generated by Django 3.1.3 on 2020-11-25 18:19

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casename', models.CharField(max_length=45, null=True, verbose_name='用例名称')),
                ('case_type', models.CharField(max_length=45, null=True, verbose_name='用例请求类型getpost等')),
                ('case_url', models.CharField(max_length=450, null=True, verbose_name='用例请求地址')),
                ('case_data', models.CharField(max_length=5000, null=True, verbose_name='用例请求参数')),
                ('case_replace', models.CharField(max_length=450, null=True, verbose_name='用例替换参数')),
                ('case_file_name', models.CharField(max_length=450, null=True, verbose_name='文件上传名称')),
                ('case_file_data', models.CharField(max_length=450, null=True, verbose_name='上传文件接口请求参数')),
                ('case_check', models.CharField(max_length=450, null=True, verbose_name='用例检查点')),
                ('case_save', models.CharField(max_length=450, null=True, verbose_name='用例保存参数')),
                ('case_postpostposition', models.CharField(max_length=450, null=True, verbose_name='后置处理')),
                ('case_careatetime', models.DateTimeField(verbose_name='创建时间')),
                ('case_status', models.CharField(choices=[('1', '启用'), ('2', '删除')], default='1', max_length=4, verbose_name='用例状态')),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=45, unique=True, verbose_name='配置名称')),
                ('value', models.CharField(max_length=45, null=True, verbose_name='配置值')),
            ],
        ),
        migrations.CreateModel(
            name='Environmental',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_name', models.CharField(max_length=45, unique=True, verbose_name='环境名称')),
                ('es_ip', models.CharField(max_length=45, verbose_name='环境ip')),
                ('es_port', models.CharField(max_length=45, verbose_name='环境端口号')),
                ('es_user', models.CharField(max_length=45, verbose_name='环境用户名')),
                ('es_password', models.CharField(max_length=45, verbose_name='环境密码')),
                ('createtime', models.DateTimeField(verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Modular',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(max_length=45, null=True, verbose_name='平台')),
                ('moduless', models.CharField(max_length=45, null=True, verbose_name='模块名')),
                ('status', models.CharField(choices=[('1', '启用'), ('2', '删除')], default='1', max_length=4, verbose_name='模块状态')),
                ('createtime', models.DateTimeField(verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=45, unique=True, verbose_name='用户名')),
                ('password', models.CharField(max_length=45, verbose_name='密码')),
                ('email', models.CharField(max_length=45, verbose_name='邮箱')),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run_url', models.CharField(max_length=450, null=True, verbose_name='运行结果链接')),
                ('runsave', models.CharField(max_length=4500, null=True, verbose_name='运行结果链接')),
                ('createtime', models.DateTimeField(verbose_name='创建时间')),
                ('api_id', models.CharField(max_length=45, null=True, verbose_name='执行id')),
                ('modular', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.modular', verbose_name='用户执行id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user', verbose_name='用户执行id')),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.CharField(max_length=45, verbose_name='邮件地址')),
                ('dingding', models.CharField(max_length=200, null=True, verbose_name='钉钉链接')),
                ('notice_url', models.CharField(max_length=200, verbose_name='发送测试报告的地址')),
                ('createtime', models.DateTimeField(verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.user', verbose_name='用户执行id')),
            ],
        ),
        migrations.CreateModel(
            name='Cursor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usr_key', models.CharField(max_length=4500, verbose_name='保留字段名')),
                ('user_value', models.CharField(max_length=4500, verbose_name='保留字段值')),
                ('createtime', models.DateTimeField(verbose_name='创建时间')),
                ('api', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.api', verbose_name='用户执行id')),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.run', verbose_name='用户执行id')),
            ],
        ),
        migrations.AddField(
            model_name='api',
            name='modular',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.modular', verbose_name='用户执行id'),
        ),
    ]
